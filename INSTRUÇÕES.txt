================================================================================
  INSTRU√á√ïES PARA EXECUTAR O PROJETO UIx SSR HYBRID
================================================================================

Este guia passo a passo vai te ajudar a rodar o projeto pela primeira vez.

================================================================================
PASSO 1: VERIFICAR PR√â-REQUISITOS
================================================================================

Antes de come√ßar, verifique se voc√™ tem instalado:

1. Java 11 ou superior
   Verificar: java -version

2. Clojure CLI (tools.deps)
   Verificar: clj --version

3. Node.js 16 ou superior e npm
   Verificar: node --version
   Verificar: npm --version

Se algum desses n√£o estiver instalado, veja o README.md se√ß√£o "Pr√©-requisitos"
para instru√ß√µes de instala√ß√£o.

================================================================================
PASSO 2: INSTALAR DEPEND√äNCIAS
================================================================================

No diret√≥rio raiz do projeto (uix-ssr-hybrid/), execute:

  npm install

Isso vai instalar:
- Shadow-CLJS (compilador ClojureScript)
- React e React-DOM

Aguarde o download e instala√ß√£o de todas as depend√™ncias.
As depend√™ncias Clojure ser√£o baixadas automaticamente quando voc√™ rodar
o servidor pela primeira vez.

================================================================================
PASSO 3: INICIAR O PROJETO
================================================================================

OP√á√ÉO A: UM √öNICO COMANDO (RECOMENDADO - MAIS F√ÅCIL) ‚ö°
------------------------------------------------------

Execute um √∫nico comando que inicia tudo:

  npm run dev ou clj -M:dev-parallel

Isso vai iniciar AUTOMATICAMENTE:
- ‚úÖ Servidor Clojure (porta 3000)
- ‚úÖ Shadow-CLJS (compilador frontend)
- ‚úÖ Ambos rodam em paralelo no mesmo terminal

Voc√™ ver√° os logs de ambos os processos misturados no terminal.

IMPORTANTE: Na primeira execu√ß√£o, pode levar 1-2 minutos para baixar
depend√™ncias e compilar tudo. Aguarde at√© ver:

  üöÄ Servidor iniciando na porta 3000...
  [:app] Build completed.

Pronto! Pule para o PASSO 4 (Acessar a Aplica√ß√£o).


OP√á√ÉO B: DOIS TERMINAIS SEPARADOS (LOGS MAIS ORGANIZADOS)
----------------------------------------------------------

Se preferir ver os logs separadamente, use dois terminais:

Terminal 1 - Servidor Clojure:

  npm run server
  (ou: clj -M -m myapp.server)

  Voc√™ ver√°:
    Downloading dependencies...
    üöÄ Servidor iniciando na porta 3000...
    üìç Acesse http://localhost:3000

  IMPORTANTE: Na primeira execu√ß√£o, o Clojure vai baixar todas as
  depend√™ncias (Ring, Hiccup, Compojure, etc). Isso pode levar alguns minutos.

  Mantenha este terminal aberto.

Terminal 2 - Shadow-CLJS:

  npm run watch

  Voc√™ ver√°:
    shadow-cljs - watching build :app
    [:app] Compiling ...
    [:app] Build completed. (XXX files, XX compiled, XX seconds)

  IMPORTANTE: Na primeira execu√ß√£o, o Shadow-CLJS vai baixar depend√™ncias
  ClojureScript e compilar todo o c√≥digo. Isso pode levar 1-2 minutos.

  Mantenha este terminal aberto.

================================================================================
PASSO 4: ACESSAR A APLICA√á√ÉO
================================================================================

Abra seu navegador e acesse:

  http://localhost:3000

Voc√™ deve ver a p√°gina inicial do UIx SSR Hybrid com:
- Hero section com t√≠tulo e bot√µes
- Estat√≠sticas (Posts, Visitantes, Uptime)
- Grid com 2 posts em destaque

================================================================================
PASSO 5: TESTAR AS FUNCIONALIDADES
================================================================================

1. NAVEGA√á√ÉO
   - Clique em "Sobre" no menu ‚Üí deve ir para p√°gina /about
   - Clique em "Blog" no menu ‚Üí deve ir para um post
   - Clique no logo "UIx SSR" ‚Üí deve voltar para home

2. P√ÅGINA DE POST
   - Clique em um dos posts da home
   - Teste o bot√£o de curtidas (‚ù§Ô∏è) ‚Üí contador deve aumentar/diminuir
   - Clique em "Compartilhar" ‚Üí popup deve aparecer com op√ß√µes
   - Teste os bot√µes de compartilhamento (abrir√£o redes sociais)

3. HOT RELOAD (Opcional)
   - Com npm run dev rodando, edite src/myapp/client.cljs
   - Exemplo: Mude o texto "UIx SSR Hybrid" para "Meu App"
   - Salve o arquivo
   - O navegador deve recarregar automaticamente com a mudan√ßa

================================================================================
PASSO 6: TESTAR O SEO (Opcional)
================================================================================

Para verificar que o servidor est√° gerando HTML com metadados completos,
abra um terceiro terminal e execute:

  curl http://localhost:3000/

Voc√™ ver√° HTML completo com:
- Tags <meta> no <head>
- Open Graph tags (og:title, og:description, etc)
- Twitter Card tags
- JSON-LD structured data
- Dados da p√°gina injetados como JSON

Isso prova que o SSR est√° funcionando perfeitamente!

================================================================================
ROTAS DISPON√çVEIS
================================================================================

URL                                 | Descri√ß√£o
------------------------------------|------------------------------------------
http://localhost:3000/              | P√°gina inicial
http://localhost:3000/about         | P√°gina sobre o projeto
http://localhost:3000/blog/entendendo-ssr-clojure | Post sobre SSR
http://localhost:3000/blog/introducao-uix         | Post sobre UIx
http://localhost:3000/qualquer-coisa              | P√°gina 404

================================================================================
PARAR A APLICA√á√ÉO
================================================================================

Para parar a aplica√ß√£o:

1. No Terminal 1 (servidor Clojure): Pressione Ctrl+C
2. No Terminal 2 (Shadow-CLJS): Pressione Ctrl+C

================================================================================
PROBLEMAS COMUNS
================================================================================

PROBLEMA: "Porta 3000 j√° est√° em uso"
SOLU√á√ÉO: Outro processo est√° usando a porta. Encerre-o ou mude a porta
         em src/myapp/server.clj (fun√ß√£o -main).

PROBLEMA: "Cannot find module 'react'"
SOLU√á√ÉO: Execute novamente: npm install

PROBLEMA: "Could not find artifact"
SOLU√á√ÉO: Verifique sua conex√£o com internet. As depend√™ncias precisam
         ser baixadas do Maven Central e Clojars.

PROBLEMA: Mudan√ßas no c√≥digo n√£o aparecem
SOLU√á√ÉO: - Para .cljs: Verifique se npm run watch est√° rodando
         - Para .clj: Reinicie o servidor (Ctrl+C e rode novamente)

PROBLEMA: P√°gina n√£o carrega CSS ou JavaScript
SOLU√á√ÉO: Verifique se o Shadow-CLJS compilou com sucesso
         (deve ter criado resources/public/js/main.js)

================================================================================
PR√ìXIMOS PASSOS
================================================================================

Agora que o projeto est√° rodando, voc√™ pode:

1. Explorar o c√≥digo:
   - src/myapp/server.clj - L√≥gica do servidor e SSR
   - src/myapp/client.cljs - Componentes UIx
   - resources/public/css/main.css - Estilos

2. Fazer modifica√ß√µes:
   - Adicionar novos posts em server.clj
   - Criar novos componentes em client.cljs
   - Ajustar cores e estilos em main.css

3. Ler o README.md completo para:
   - Entender a arquitetura
   - Ver como adicionar novas rotas
   - Aprender sobre build de produ√ß√£o

================================================================================

Feito! Seu projeto UIx SSR Hybrid est√° rodando! üéâ

Para mais informa√ß√µes, consulte o README.md

================================================================================
